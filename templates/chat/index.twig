{% extends "base/layout.twig" %}

{% block title %}Chat IA | {{ app_name }}{% endblock %}

{% block stylesheets %}
<style>
    .chat-container {
        @apply bg-white rounded-xl shadow-sm p-6 mb-6 max-w-5xl mx-auto;
    }
    
    .chat-header {
        @apply border-b border-gray-200 pb-4 mb-4;
    }
    
    .chat-info {
        @apply bg-blue-50 border-l-4 border-blue-500 p-4 mb-6;
    }
    
    .chat-info-text {
        @apply text-blue-700 text-sm;
    }
    
    .chat-area {
        @apply flex flex-col h-[500px];
    }
    
    .messages-container {
        @apply flex-grow overflow-y-auto mb-4 p-2;
    }
    
    .message {
        @apply max-w-[80%] mb-4 p-4 rounded-lg;
    }
    
    .message-user {
        @apply bg-blue-100 text-gray-800 ml-auto rounded-tr-none;
    }
    
    .message-ai {
        @apply bg-gray-100 text-gray-800 mr-auto rounded-tl-none;
    }
    
    .message-time {
        @apply text-xs text-gray-500 mt-1;
    }
    
    .input-area {
        @apply border-t border-gray-200 pt-4;
    }
    
    .message-form {
        @apply flex items-end gap-2;
    }
    
    .message-input {
        @apply flex-grow relative;
    }
    
    .message-textarea {
        @apply w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none 
               focus:ring-2 focus:ring-primary focus:border-primary resize-none;
    }
    
    .transcript-reference {
        @apply mt-8 p-4 border border-gray-200 rounded-lg bg-gray-50;
    }
    
    .reference-header {
        @apply flex justify-between mb-2;
    }
    
    .reference-title {
        @apply text-lg font-medium text-gray-800;
    }
    
    .reference-link {
        @apply text-primary hover:underline text-sm;
    }
    
    .reference-content {
        @apply text-gray-700 text-sm line-clamp-4;
    }
    
    /* Animations */
    .typing-indicator {
        @apply flex space-x-1 p-2 my-2;
    }
    
    .typing-indicator span {
        @apply w-2 h-2 bg-gray-400 rounded-full;
        animation: typing 1.4s infinite ease-in-out both;
    }
    
    .typing-indicator span:nth-child(1) {
        animation-delay: 0s;
    }
    
    .typing-indicator span:nth-child(2) {
        animation-delay: 0.2s;
    }
    
    .typing-indicator span:nth-child(3) {
        animation-delay: 0.4s;
    }
    
    @keyframes typing {
        0% { transform: scale(1); }
        50% { transform: scale(1.5); }
        100% { transform: scale(1); }
    }
</style>
{% endblock %}

{% block content %}
<div class="chat-container">
    <div class="chat-header">
        <h1 class="text-2xl font-bold">Chat avec l'IA</h1>
        <p class="text-gray-600">Posez des questions sur votre transcription ou demandez des analyses</p>
    </div>
    
    {% if is_new_chat %}
        <div class="chat-info">
            <p class="chat-info-text">
                <strong>Conseil :</strong> Vous pouvez demander à l'IA d'analyser votre transcription, de la résumer, 
                de répondre à des questions spécifiques sur son contenu, ou même de générer des questions pertinentes.
            </p>
        </div>
    {% endif %}
    
    <div class="chat-area">
        <div id="messages-container" class="messages-container">
            {% if messages is defined and messages|length > 0 %}
                {% for message in messages %}
                    <div class="message {% if message.sender == 'user' %}message-user{% else %}message-ai{% endif %}">
                        <div class="message-content">{{ message.content|nl2br }}</div>
                        <div class="message-time">{{ message.timestamp|date("H:i") }}</div>
                    </div>
                {% endfor %}
            {% else %}
                <!-- Message d'accueil de l'IA -->
                <div class="message message-ai">
                    <div class="message-content">
                        {% if source_transcript is defined and source_transcript %}
                            Bonjour ! Je suis votre assistant pour discuter de la transcription "{{ source_transcript.title }}". 
                            Que souhaitez-vous savoir sur cette transcription ?
                        {% else %}
                            Bonjour ! Je suis votre assistant IA. Comment puis-je vous aider aujourd'hui ?
                        {% endif %}
                    </div>
                    <div class="message-time">{{ "now"|date("H:i") }}</div>
                </div>
            {% endif %}
            
            <!-- Indicateur de saisie (caché par défaut) -->
            <div id="typing-indicator" class="typing-indicator ml-4 hidden">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
        
        <div class="input-area">
            <form id="message-form" class="message-form" method="post" action="{{ url('index.php', {'action': 'chat_send'}) }}">
                <div class="message-input">
                    <textarea id="message-input" name="message" class="message-textarea" rows="3" placeholder="Écrivez votre message ici..." required></textarea>
                    
                    {% if source_transcript is defined and source_transcript %}
                        <input type="hidden" name="source_id" value="{{ source_transcript.id }}">
                    {% endif %}
                    
                    {% if chat_id is defined and chat_id %}
                        <input type="hidden" name="chat_id" value="{{ chat_id }}">
                    {% endif %}
                </div>
                
                <button type="submit" class="btn-primary px-5 py-3">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                    </svg>
                </button>
            </form>
        </div>
    </div>
    
    {% if source_transcript is defined and source_transcript %}
        <div class="transcript-reference">
            <div class="reference-header">
                <div class="reference-title">{{ source_transcript.title }}</div>
                <a href="{{ url('index.php', {'action': 'result', 'id': source_transcript.id}) }}" class="reference-link">Voir la transcription complète</a>
            </div>
            <div class="reference-content">
                {{ source_transcript.text|striptags|slice(0, 300) }}{% if source_transcript.text|length > 300 %}...{% endif %}
            </div>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const messageForm = document.getElementById('message-form');
        const messageInput = document.getElementById('message-input');
        const messagesContainer = document.getElementById('messages-container');
        const typingIndicator = document.getElementById('typing-indicator');
        
        // Faire défiler jusqu'en bas des messages
        function scrollToBottom() {
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
        
        // Formater un message
        function formatMessage(content, sender) {
            const now = new Date();
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            
            return `
                <div class="message ${sender === 'user' ? 'message-user' : 'message-ai'}">
                    <div class="message-content">${content.replace(/\n/g, '<br>')}</div>
                    <div class="message-time">${hours}:${minutes}</div>
                </div>
            `;
        }
        
        // Simuler une réponse de l'IA (pour démonstration)
        function simulateAiResponse(userMessage) {
            // Montrer l'indicateur de saisie
            typingIndicator.classList.remove('hidden');
            scrollToBottom();
            
            // Simuler un délai de réponse (1.5 à 3 secondes)
            const delay = Math.random() * 1500 + 1500;
            
            setTimeout(() => {
                // Cacher l'indicateur de saisie
                typingIndicator.classList.add('hidden');
                
                // Réponse basique basée sur le message de l'utilisateur
                let aiResponse;
                const lowercaseMessage = userMessage.toLowerCase();
                
                if (lowercaseMessage.includes('bonjour') || lowercaseMessage.includes('salut')) {
                    aiResponse = "Bonjour ! Comment puis-je vous aider avec votre transcription ?";
                } else if (lowercaseMessage.includes('résumé') || lowercaseMessage.includes('résumer')) {
                    aiResponse = "Je peux vous proposer un résumé de votre transcription. Voici les points principaux :\n\n1. Le sujet principal abordé...\n2. Les intervenants ont discuté de...\n3. La conclusion porte sur...";
                } else if (lowercaseMessage.includes('analyse') || lowercaseMessage.includes('analyser')) {
                    aiResponse = "Voici mon analyse du contenu de la transcription :\n\n- Les thèmes principaux sont...\n- Le ton général est...\n- Les points clés à retenir sont...";
                } else if (lowercaseMessage.includes('question')) {
                    aiResponse = "Voici quelques questions que vous pourriez explorer à partir de cette transcription :\n\n1. Comment approfondir le sujet principal abordé ?\n2. Quelles sources supplémentaires pourraient compléter ces informations ?\n3. Comment appliquer ces concepts dans un contexte pratique ?";
                } else {
                    aiResponse = "J'ai bien pris en compte votre message. Y a-t-il un aspect particulier de la transcription sur lequel vous souhaitez que je me concentre ?";
                }
                
                // Ajouter la réponse de l'IA
                messagesContainer.insertAdjacentHTML('beforeend', formatMessage(aiResponse, 'ai'));
                scrollToBottom();
            }, delay);
        }
        
        // Soumettre le formulaire
        messageForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const message = messageInput.value.trim();
            if (!message) return;
            
            // Ajouter le message de l'utilisateur
            messagesContainer.insertAdjacentHTML('beforeend', formatMessage(message, 'user'));
            
            // Vider le champ de saisie
            messageInput.value = '';
            
            // Faire défiler vers le bas
            scrollToBottom();
            
            // Simuler une réponse de l'IA (à remplacer par une requête AJAX en production)
            simulateAiResponse(message);
        });
        
        // Ajuster la hauteur du textarea en fonction du contenu
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            const newHeight = Math.min(this.scrollHeight, 150); // Max 150px
            this.style.height = newHeight + 'px';
        });
        
        // Permettre d'envoyer avec Entrée (mais Shift+Entrée pour un nouveau paragraphe)
        messageInput.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                messageForm.dispatchEvent(new Event('submit'));
            }
        });
        
        // Initialisation
        scrollToBottom();
    });
</script>
{% endblock %}
